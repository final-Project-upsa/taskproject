import React from 'react';
import { Search, Plus, Users, UserPlus } from 'lucide-react';

const ChatList = ({ chats = [], searchTerm, setSearchTerm, setShowNewChatModal, selectedChatId, setSelectedChatId, getChatDisplayName }) => {
  // Add a guard clause at the beginning
  const sortedChats = (!chats || !Array.isArray(chats)) ? [] : [...chats].sort((a, b) => {
    const timestampA = a.last_message_timestamp ? new Date(a.last_message_timestamp) : new Date(0);
    const timestampB = b.last_message_timestamp ? new Date(b.last_message_timestamp) : new Date(0);
    return timestampB - timestampA;
  });

  return (
    <div className="w-80 bg-white border-r border-gray-200 flex flex-col">
      <div className="p-4 border-b">
        <div className="flex items-center justify-between mb-4">
          <h2 className="text-xl font-semibold text-gray-800">Messages</h2>
          <button
            onClick={() => setShowNewChatModal(true)}
            className="p-2 rounded-full hover:bg-gray-100 text-gray-600"
          >
            <Plus size={20} />
          </button>
        </div>
        <div className="relative">
          <Search className="absolute left-3 top-2.5 text-gray-400" size={18} />
          <input
            type="text"
            placeholder="Search chats..."
            value={searchTerm}
            onChange={(e) => setSearchTerm(e.target.value)}
            className="w-full pl-10 pr-4 py-2 bg-gray-50 border border-gray-200 rounded-lg focus:outline-none focus:ring-2 focus:ring-indigo-500"
          />
        </div>
      </div>
      <div className="flex-1 overflow-y-auto">
        {sortedChats.length === 0 ? (
          <div className="p-4 text-center text-gray-500">
            No chats available
          </div>
        ) : (
          sortedChats.map((chat) => (
            <div
              key={chat.id}
              onClick={() => setSelectedChatId(chat.id)}
              className={`p-4 hover:bg-gray-50 cursor-pointer border-b border-gray-100 transition-colors relative ${
                selectedChatId === chat.id ? 'bg-indigo-50' : ''
              }`}
            >
              <div className="flex items-center space-x-3">
                <div className={`w-10 h-10 rounded-full flex items-center justify-center ${
                  chat.chat_type === 'GROUP' ? 'bg-indigo-100 text-indigo-600' : 'bg-gray-100 text-gray-600'
                }`}>
                  {chat.chat_type === 'GROUP' ? <Users size={20} /> : <UserPlus size={20} />}
                </div>
                <div className="flex-1 min-w-0">
                  <div className="font-medium text-gray-900 truncate flex items-center">
                    {getChatDisplayName(chat)}
                  </div>
                  <div className="text-sm text-gray-500 truncate">
                    {chat.last_message?.content || 'No messages yet'}
                  </div>
                </div>
              </div>
              {chat.has_new_message && chat.id !== selectedChatId && (
                <div className="absolute right-4 top-1/2 -translate-y-1/2 flex items-center">
                  <div className="w-2 h-2 bg-indigo-500 rounded-full mr-2"></div>
                  <span className="text-xs text-indigo-600 font-medium">New message</span>
                </div>
              )}
            </div>
          ))
        )}
      </div>
    </div>
  );
};

export default ChatList;



